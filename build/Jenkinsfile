pipeline {
    agent any 
    environment {
        AWS_REGION="eu-central-1"
        EKS_ADMIN_ROLE="udacity-eks-admin-role"
        EKS_PROFILE_NAME="udacity-eks"
        CFN_EKS_STACK="eksctl-udacity-cluster"
        CFN_IAM_STACK="udacity-eks-roles-and-permissions"
    }
    stages {
        stage ('Check if EKS Cluster exists') {
          steps {
            script {
              withAWS(credentials: 'aws-default-credentials', region: 'eu-central-1') {
                eksClusterExists = sh(
                  script: 'if aws cloudformation describe-stacks --region ${AWS_REGION} --stack-name ${CFN_EKS_STACK} > /dev/null 2>&1; then echo "true"; else echo "false"; fi',
                  returnStdout: true).trim()
                echo "EKS Cluster found: ${eksClusterExists}"
              }
            }
          }
        }        
        stage('Prepare AWS IAM') {
            when {
                expression { eksClusterExists == 'false' }
            }            
            steps {
                withAWS(credentials: 'aws-default-credentials', region: 'eu-central-1') {
                    dir('scripts') {
                        sh './prepare-iam.sh ${EKS_ADMIN_ROLE} ${EKS_PROFILE_NAME} ${CFN_IAM_STACK}'
                    }
                }
            }
        }
        stage('Install tooling (eksctl, ytt)') {
            when {
                expression { eksClusterExists == 'false' }
            }  
            steps {
                withEnv(['JENKINS_BIN=/var/lib/jenkins/bin']) {
                    sh '''
                        sleep 5
                        aws sts get-caller-identity
                        
                        export LC_CTYPE=en_US.UTF-8
                        curl --silent --location https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz | tar xz -C .
                        mv eksctl $JENKINS_BIN
                        
                        wget -cO - https://github.com/vmware-tanzu/carvel-ytt/releases/download/v0.30.0/ytt-linux-amd64 > ytt
                        chmod +x ./ytt
                        mv ytt $JENKINS_BIN
                        
                        curl -sl https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/$(uname -s | tr '[:upper:]' '[:lower:]')/amd64/kubectl -o kubectl
	                    mv kubectl $JENKINS_BIN
                    '''
                }
            }
        }   
        stage('Create EKS Cluster') {
            when {
                expression { eksClusterExists == 'false' }
            }
            steps {
                withEnv(['PATH+EXTRA=/var/lib/jenkins/']) {
                    echo "$PATH"
                    sh 'eksctl version'
                    sh 'kubectl version --client --short'
                    sh 'ytt version'
                }
            }
        }
    }
    post {
        failure {
            withAWS(credentials: 'aws-default-credentials', region: 'eu-central-1') {
                withEnv(['PATH+EXTRA=/var/lib/jenkins/bin']) {
                    dir('config/eks') {
                        echo 'There was an error. EKS Cluster and IAM Setup will be deleted automatically'
                        sh 'aws cloudformation delete-stack --stack-name ${CFN_IAM_STACK}'
                        sh '#eksctl delete cluster -f cluster-ytt.yaml --profile ${EKS_PROFILE_NAME}'
                    }
                }
            }
        }
        success {
            echo 'Successfully created Cluster'
        }
    }
}